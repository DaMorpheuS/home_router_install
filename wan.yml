---
- name: Configure WAN PPPoE connection
  hosts: routers
  become: yes
  
  tasks:
    - name: Set default values for WAN configuration
      ansible.builtin.set_fact:
        wan_physical_interface: "{{ wan_physical_interface | default('enp1s0') }}"
        wan_vlan: "{{ wan_vlan | default('6') }}"
        ppp_provider: "{{ ppp_provider | default('kpn') }}"
        ppp_user: "{{ ppp_user | default('kpn@kpn.nl') }}"
      tags: always
    
    - name: Set WAN VLAN interface name
      ansible.builtin.set_fact:
        wan_vlan_interface: "{{ wan_physical_interface }}.{{ wan_vlan }}"
      tags: always
    
    - name: Check if required PPPoE and VLAN packages are installed
      ansible.builtin.command: dpkg -l pppoe pppoeconf vlan ppp
      register: wan_packages_check
      changed_when: false
      failed_when: wan_packages_check.rc != 0
      tags: packages
      
    - name: Load 8021q kernel module for VLAN support
      ansible.builtin.modprobe:
        name: 8021q
        state: present
      tags: vlan
      
    - name: Ensure 8021q module loads on boot
      ansible.builtin.lineinfile:
        path: /etc/modules
        line: "8021q"
        create: yes
        mode: '0644'
      tags: vlan
      
    - name: Ensure systemd-networkd directory exists
      ansible.builtin.file:
        path: /etc/systemd/network
        state: directory
        mode: '0755'
      tags: configure
      
    - name: Configure physical WAN interface with systemd-networkd
      ansible.builtin.copy:
        dest: /etc/systemd/network/10-{{ wan_physical_interface }}.network
        content: |
          [Match]
          Name={{ wan_physical_interface }}
          
          [Link]
          RequiredForOnline=no
          MTUBytes=1512
          
          [Network]
          VLAN={{ wan_vlan_interface }}
          IPv4Forwarding=yes
        mode: '0644'
      notify: restart networkd
      tags: configure
      
    - name: Configure WAN VLAN netdev with systemd-networkd
      ansible.builtin.copy:
        dest: /etc/systemd/network/10-{{ wan_vlan_interface }}.netdev
        content: |
          [NetDev]
          Name={{ wan_vlan_interface }}
          Kind=vlan
          MTUBytes=1508
          
          [VLAN]
          Id={{ wan_vlan }}
        mode: '0644'
      notify: restart networkd
      tags: configure
      
    - name: Configure WAN VLAN network with systemd-networkd
      ansible.builtin.copy:
        dest: /etc/systemd/network/10-{{ wan_vlan_interface }}.network
        content: |
          [Match]
          Name={{ wan_vlan_interface }}
          
          [Link]
          RequiredForOnline=no
          
          [Network]
          # Interface for PPPoE - no IP configuration needed
          IPv4Forwarding=yes
        mode: '0644'
      notify: restart networkd
      tags: configure
      
    - name: Enable systemd-networkd
      ansible.builtin.systemd:
        name: systemd-networkd
        enabled: yes
        state: started
      tags: packages
      
    - name: Disable old networking service (if exists)
      ansible.builtin.systemd:
        name: networking
        enabled: no
        state: stopped
      ignore_errors: yes
      tags: packages
      
    - name: Ensure /etc/ppp/peers directory exists
      ansible.builtin.file:
        path: /etc/ppp/peers
        state: directory
        mode: '0755'
      tags: ppp
      
    - name: Create PPP peers configuration file for KPN
      ansible.builtin.copy:
        dest: /etc/ppp/peers/{{ ppp_provider }}
        mode: '0640'
        content: |
          noipdefault
          +ipv6
          ipv6cp-use-ipaddr
          defaultroute
          persist
          lcp-echo-interval 10
          lcp-echo-failure 3
          maxfail 0
          debug
          kdebug 7
          holdoff 10
          mtu 1500
          mru 1500
          plugin rp-pppoe.so {{ wan_vlan_interface }}
          noauth
          user "{{ ppp_user }}"
          usepeerdns # REMOVE AGAIN AFTER INSTALLING DNS CACHE
      tags: ppp
      
    - name: Ensure /etc/ppp/pap-secrets exists
      ansible.builtin.file:
        path: /etc/ppp/pap-secrets
        state: touch
        mode: '0600'
        modification_time: preserve
        access_time: preserve
      tags: ppp
      
    - name: Enable PPPoE service to start on boot
      ansible.builtin.systemd:
        name: ppp@{{ ppp_provider }}.service
        enabled: yes
      tags: ppp
      
    - name: Start PPPoE connection now
      ansible.builtin.systemd:
        name: ppp@{{ ppp_provider }}.service
        state: started
      tags: ppp
      ignore_errors: yes
      
    - name: Wait for PPP interface to come up
      ansible.builtin.wait_for:
        timeout: 15
      tags: ppp
      delegate_to: localhost
      
    - name: Check if ppp0 interface exists
      ansible.builtin.command: ip link show ppp0
      register: ppp0_check
      ignore_errors: yes
      changed_when: false
      tags: validate
      
    - name: Display PPP interface status
      ansible.builtin.debug:
        msg: "PPP interface status: {{ 'CONNECTED' if ppp0_check.rc == 0 else 'NOT CONNECTED - Check logs with: journalctl -u pppoe-wan -n 50' }}"
      tags: validate
      
    - name: Check if WAN physical interface exists
      ansible.builtin.command: ip link show {{ wan_physical_interface }}
      register: wan_physical_check
      ignore_errors: yes
      changed_when: false
      tags: validate
      
    - name: Display WAN physical interface status
      ansible.builtin.debug:
        msg: "WAN physical interface {{ wan_physical_interface }} status: {{ 'EXISTS' if wan_physical_check.rc == 0 else 'NOT FOUND' }}"
      tags: validate
      
    - name: Check if WAN VLAN interface exists
      ansible.builtin.command: ip link show {{ wan_vlan_interface }}
      register: wan_vlan_check
      ignore_errors: yes
      changed_when: false
      tags: validate
      
    - name: Display WAN VLAN interface status
      ansible.builtin.debug:
        msg: "WAN VLAN interface {{ wan_vlan_interface }} status: {{ 'EXISTS' if wan_vlan_check.rc == 0 else 'NOT FOUND' }}"
      tags: validate
      
    - name: Display WAN configuration summary
      ansible.builtin.debug:
        msg: |
          WAN Configuration Summary:
          - Physical Interface: {{ wan_physical_interface }} (configured with systemd-networkd)
          - VLAN Interface: {{ wan_vlan_interface }} (VLAN {{ wan_vlan }})
          - PPP Provider: {{ ppp_provider }}
          - PPP User: {{ ppp_user }}
          - PPPoE Service: ppp@{{ ppp_provider }}.service (auto-starts on boot)
          
          Manual Control:
          - Start connection:  systemctl start ppp@{{ ppp_provider }}.service  (or: pon {{ ppp_provider }})
          - Stop connection:   systemctl stop ppp@{{ ppp_provider }}.service   (or: poff {{ ppp_provider }})
          - Service status:    systemctl status ppp@{{ ppp_provider }}.service
          - View logs:         journalctl -u ppp@{{ ppp_provider }}.service -f
          - Check PPP status:  ip addr show ppp0
          - Test internet:     ping -c 3 8.8.8.8
      tags: info
  
  handlers:
    - name: restart networkd
      ansible.builtin.systemd:
        name: systemd-networkd
        state: restarted
      # Note: This may temporarily affect network connectivity

